"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/contexts/ContractContext.tsx":
/*!******************************************!*\
  !*** ./app/contexts/ContractContext.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContractProvider: () => (/* binding */ ContractProvider),\n/* harmony export */   useContract: () => (/* binding */ useContract)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/providers/provider-browser.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/contract/contract.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/utils/units.js\");\n/* harmony import */ var _AIGamblingABI_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AIGamblingABI.json */ \"(app-pages-browser)/./app/contexts/AIGamblingABI.json\");\n/* __next_internal_client_entry_do_not_use__ ContractProvider,useContract auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst ContractContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nconst CONTRACT_ADDRESS = \"0x669bf6c1378fe9cA58d53D42D3B301D5F341B5E6\" // Replace with actual address\n;\nfunction ContractProvider(param) {\n    let { children } = param;\n    _s();\n    const [contract, setContract] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [currentBet, setCurrentBet] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [balance, setBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('0');\n    const [gameInfo, setGameInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [walletBalance, setWalletBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('0');\n    const [betHistory, setBetHistory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const connect = async ()=>{\n        if (typeof window.ethereum !== 'undefined') {\n            try {\n                await window.ethereum.request({\n                    method: 'eth_requestAccounts'\n                });\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_3__.BrowserProvider(window.ethereum);\n                const signer = await provider.getSigner();\n                const contract = new ethers__WEBPACK_IMPORTED_MODULE_4__.Contract(CONTRACT_ADDRESS, _AIGamblingABI_json__WEBPACK_IMPORTED_MODULE_2__, signer);\n                setContract(contract);\n                setAddress(await signer.getAddress());\n                setIsConnected(true);\n                // Refresh bet info and balance after connecting\n                await refreshAllInfo();\n            } catch (error) {\n                console.error('Failed to connect:', error);\n                throw new Error('Failed to connect to wallet');\n            }\n        } else {\n            throw new Error('MetaMask not detected');\n        }\n    };\n    const disconnect = ()=>{\n        setContract(null);\n        setIsConnected(false);\n        setAddress('');\n        setCurrentBet(null);\n        setBalance('0');\n        setGameInfo(null);\n        setWalletBalance('0');\n        setBetHistory([]);\n    };\n    const placeBet = async (guessedNumber, amount)=>{\n        if (!contract) throw new Error('Not connected');\n        if (guessedNumber < 1 || guessedNumber > 10) throw new Error('Invalid guess number');\n        if (parseFloat(amount) <= 0) throw new Error('Invalid bet amount');\n        try {\n            const tx = await contract.placeBet(guessedNumber, {\n                value: ethers__WEBPACK_IMPORTED_MODULE_5__.parseEther(amount)\n            });\n            await tx.wait();\n            await refreshAllInfo();\n        } catch (error) {\n            console.error('Error placing bet:', error);\n            throw new Error('Failed to place bet');\n        }\n    };\n    const resolveBet = async ()=>{\n        if (!contract) throw new Error('Not connected');\n        try {\n            const tx = await contract.resolveBet();\n            await tx.wait();\n            await refreshAllInfo();\n        } catch (error) {\n            console.error('Error resolving bet:', error);\n            throw new Error('Failed to resolve bet');\n        }\n    };\n    const withdraw = async ()=>{\n        if (!contract) throw new Error('Not connected');\n        try {\n            const tx = await contract.withdraw();\n            await tx.wait();\n            await refreshAllInfo();\n        } catch (error) {\n            console.error('Error withdrawing:', error);\n            throw new Error('Failed to withdraw funds');\n        }\n    };\n    const refreshBetInfo = async ()=>{\n        if (!contract || !address) return;\n        try {\n            const bet = await contract.bets(address);\n            setCurrentBet({\n                promptId: bet[0],\n                amount: ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(bet[1]),\n                guessedNumber: Number(bet[2]),\n                correctNumber: Number(bet[3]),\n                resolved: bet[4],\n                won: bet[5],\n                active: bet[6]\n            });\n        } catch (error) {\n            console.error('Error getting bet info:', error);\n            setCurrentBet(null);\n        }\n    };\n    const refreshBalance = async ()=>{\n        if (!contract || !address) return;\n        try {\n            const balance = await contract.getBalance(address);\n            setBalance(ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(balance));\n        } catch (error) {\n            console.error('Error getting balance:', error);\n            setBalance('0');\n        }\n    };\n    const refreshGameInfo = async ()=>{\n        if (!contract) return;\n        try {\n            const info = await contract.getGameInfo();\n            setGameInfo({\n                houseSupply: ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(info.houseSupply),\n                houseActiveBalance: ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(info.houseActiveBalance),\n                minBetAmount: ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(info.minBetAmount),\n                maxBetAmount: ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(info.maxBetAmount),\n                maxBetAmountPercentage: Number(info.maxBetAmountPercentage),\n                houseFeePercentage: Number(info.houseFeePercentage)\n            });\n        } catch (error) {\n            console.error('Error getting game info:', error);\n            setGameInfo(null);\n        }\n    };\n    const refreshWalletBalance = async ()=>{\n        if (!address) return;\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_3__.BrowserProvider(window.ethereum);\n            const balance = await provider.getBalance(address);\n            setWalletBalance(ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(balance));\n        } catch (error) {\n            console.error('Error getting wallet balance:', error);\n            setWalletBalance('0');\n        }\n    };\n    const refreshBetHistory = async ()=>{\n        if (!contract || !address) return;\n        try {\n            const history = await contract.getBetHistory(address);\n            setBetHistory(history.map((bet)=>({\n                    promptId: bet[0],\n                    amount: ethers__WEBPACK_IMPORTED_MODULE_5__.formatEther(bet[1]),\n                    guessedNumber: Number(bet[2]),\n                    correctNumber: Number(bet[3]),\n                    resolved: bet[4],\n                    won: bet[5]\n                })));\n        } catch (error) {\n            console.error('Error getting bet history:', error);\n            setBetHistory([]);\n        }\n    };\n    const refreshAllInfo = async ()=>{\n        await Promise.all([\n            refreshBetInfo(),\n            refreshBalance(),\n            refreshGameInfo(),\n            refreshWalletBalance(),\n            refreshBetHistory()\n        ]);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ContractProvider.useEffect\": ()=>{\n            if (isConnected) {\n                refreshAllInfo();\n                const interval = setInterval(refreshAllInfo, 10000) // Poll every 10 seconds\n                ;\n                return ({\n                    \"ContractProvider.useEffect\": ()=>clearInterval(interval)\n                })[\"ContractProvider.useEffect\"];\n            }\n        }\n    }[\"ContractProvider.useEffect\"], [\n        isConnected\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ContractProvider.useEffect\": ()=>{\n            if (window.ethereum) {\n                window.ethereum.on('accountsChanged', {\n                    \"ContractProvider.useEffect\": ()=>{\n                        disconnect();\n                    }\n                }[\"ContractProvider.useEffect\"]);\n                window.ethereum.on('chainChanged', {\n                    \"ContractProvider.useEffect\": ()=>{\n                        disconnect();\n                    }\n                }[\"ContractProvider.useEffect\"]);\n            }\n            return ({\n                \"ContractProvider.useEffect\": ()=>{\n                    if (window.ethereum) {\n                        window.ethereum.removeAllListeners('accountsChanged');\n                        window.ethereum.removeAllListeners('chainChanged');\n                    }\n                }\n            })[\"ContractProvider.useEffect\"];\n        }\n    }[\"ContractProvider.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContractContext.Provider, {\n        value: {\n            contract,\n            isConnected,\n            address,\n            currentBet,\n            balance,\n            houseSupply,\n            houseActiveBalance,\n            walletBalance,\n            betHistory,\n            connect,\n            disconnect,\n            placeBet,\n            resolveBet,\n            withdraw,\n            refreshBetInfo,\n            refreshBalance,\n            refreshHouseInfo,\n            refreshWalletBalance,\n            refreshBetHistory\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/keruch/Development/Dymension/rollapp-blueprints/ai-agent/frontend/brainpump/app/contexts/ContractContext.tsx\",\n        lineNumber: 252,\n        columnNumber: 5\n    }, this);\n}\n_s(ContractProvider, \"eVn5kItTkOHm+C4cpttrT2uXF58=\");\n_c = ContractProvider;\nconst useContract = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ContractContext);\n};\n_s1(useContract, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContractProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/contexts/ContractContext.tsx\n"));

/***/ })

});