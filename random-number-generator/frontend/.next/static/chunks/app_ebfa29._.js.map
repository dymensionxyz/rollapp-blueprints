{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///Users/pudge1000-7/GolandProjects/rollapp-evm/contracts/frontend/coin-flip-game/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, TextField, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport { toast } from 'react-hot-toast';\nimport { ethers } from 'ethers';\nimport CoinFlipABI from './CoinFlipABI.json';\n\nfunction sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default function CoinFlipGame() {\n  const [bet, setBet] = useState(1);\n  const [side, setSide] = useState('DYM');\n  const [balance, setBalance] = useState('0');\n  const [isFlipping, setIsFlipping] = useState(false);\n  const [result, setResult] = useState<'DYM' | 'LOGO' | null>(null);\n  const [error, setError] = useState('');\n  const [provider, setProvider] = useState<any>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [address, setAddress] = useState('')\n  const [coinFlipContract, setCoinFlipContract] = useState<any>(null);\n  const [connected, setConnected] = useState(false);\n  const [gameStatus, setGameStatus] = useState<'pending' | 'completed' | null>(null);\n  const [winStatus, setWinStatus] = useState<'win' | 'lose' | null>(null)\n  const [houseBalance, setHouseBalance] = useState('0');\n\n  const CONTRACT_ADDRESS = '0xB8c4Ec444AD59a8f7Cc2c3e3F78bb0c367d2cE1d';\n\n  const refreshWalletBalance = async () => {\n    try {\n      const web3Provider = new ethers.BrowserProvider(ethereum);\n      const userSigner = await web3Provider.getSigner();\n      const balance = await web3Provider.getBalance(await userSigner.getAddress())\n      setBalance(ethers.formatEther(balance))\n    } catch (error) {\n      console.error('Error getting wallet balance:', error)\n      setBalance('0')\n    }\n  }\n\n  const refreshHouseBalance = async () => {\n    if (!coinFlipContract || !address) return\n    try {\n      const balance = await coinFlipContract.getBalance(address)\n      setHouseBalance(ethers.formatEther(balance))\n    } catch (error) {\n      console.error('Error getting balance:', error)\n      setHouseBalance('0')\n    }\n  }\n\n  const withdraw = async () => {\n    if (!coinFlipContract) throw new Error('Not connected')\n    try {\n      const tx = await coinFlipContract.withdraw()\n      await tx.wait()\n      await refreshEverything()\n    } catch (error) {\n      console.error('Error withdrawing:', error)\n      throw new Error('Failed to withdraw funds')\n    }\n  }\n\n  const refreshEverything = async () => {\n    await refreshWalletBalance()\n    await refreshHouseBalance()\n    await fetchGameStatus()\n  }\n  useEffect(() => {\n    if (provider && signer && coinFlipContract && connected) {\n      refreshEverything();\n    }\n  }, [provider, signer, coinFlipContract, connected]);  // Зависимости от переменных\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const initWeb3 = async () => {\n        const ethereum = window.ethereum;\n        if (typeof ethereum !== 'undefined') {\n          try {\n            const web3Provider = new ethers.BrowserProvider(ethereum);\n            const network = await web3Provider.getNetwork();\n            console.log('Connected to network:', network.name, 'with chainId', network.chainId);\n            const userSigner = await web3Provider.getSigner();\n            const contract = new ethers.Contract(CONTRACT_ADDRESS, CoinFlipABI, userSigner);\n            setAddress(await userSigner.getAddress())\n\n            setProvider(web3Provider);\n            setSigner(userSigner);\n            setCoinFlipContract(contract);\n            setConnected(true);\n          } catch (err) {\n            console.error('Failed to connect to MetaMask', err);\n            setError('Failed to connect to MetaMask');\n          }\n        } else {\n          setError('Please install MetaMask');\n        }\n      };\n      initWeb3();\n    } else {\n      setError('Please install MetaMask');\n    }\n  }, []);\n\n  const fetchGameStatus = async () => {\n    try {\n      const gameResult = await coinFlipContract.getPlayerLastGameResult();\n      console.log(gameResult);\n\n      const status = gameResult.status.toString();\n      let statusMessage = '';\n\n      if (status === '2') {\n        statusMessage = 'Completed';\n        const didWin = gameResult.won;\n        const playerChoice = gameResult.playerChoice ? 'LOGO' : 'DYM';\n        const flipResult = didWin ? playerChoice : (playerChoice === 'DYM' ? 'LOGO' : 'DYM');\n        console.log(\"playerChoice: \" + playerChoice + \", flipResult: \" + flipResult);\n\n        if (didWin) {\n          setWinStatus('win');\n        } else {\n          setWinStatus('lose');\n        }\n\n        setResult(flipResult);\n        setIsFlipping(false);\n        setGameStatus('completed');\n      } else if (status === '1') {\n        statusMessage = 'Pending';\n      } else {\n        statusMessage = 'No Game Started';\n      }\n\n      console.log('Fetched game status:', statusMessage);\n\n      setGameStatus(status === '2' ? 'completed' : status === '1' ? 'pending' : null);\n    } catch (err) {\n      console.error('Error fetching game status:', err);\n      setError('Error fetching game status');\n    }\n  };\n\n  const flipCoin = async () => {\n    console.log(\"flipping the coin with user choice: \" + side);\n\n    if (!connected) {\n      setError('Please connect to MetaMask');\n      return;\n    }\n\n    setError('');\n    setIsFlipping(true);\n    setResult(null);\n    setGameStatus('pending');\n\n    try {\n      const currentNonce = await provider.getTransactionCount(signer.address, \"latest\");\n      const sideEnum = side === 'DYM' ? 0 : 1;\n      const tx = await coinFlipContract.startGame(sideEnum, {\n        nonce: currentNonce,\n        value: ethers.parseEther(bet.toString())\n      });\n      await tx.wait();\n      console.log('Game started');\n      await completeGame(true);\n    } catch (err) {\n      console.error('Error flipping the coin:', err);\n      setIsFlipping(false);\n      setError('Error interacting with the contract');\n      setGameStatus(null);\n    }\n\n    await refreshEverything()\n  };\n\n  const completeGame = async (wait: boolean) => {\n    console.log(`completing the game`);\n    try {\n      var retry = 0;\n      while (retry < 3) {\n        if (wait) {\n          await sleep(5000);\n        }\n        try {\n          const currentNonce = await provider.getTransactionCount(signer.address, \"latest\");\n          const tx = await coinFlipContract.completeGame({\n            nonce: currentNonce,\n          });\n          await tx.wait();\n          break;\n        } catch (err) {\n          retry++;\n          setError(`Error completing the game, retry #${retry}.`);\n          console.error(`Retry reason: ${err}`);\n        }\n      }\n\n      if (retry >= 3) {\n        return;\n      }\n\n      const gameResult = await coinFlipContract.getPlayerLastGameResult();\n      console.log(gameResult);\n\n      if (gameResult.status != 2) {\n        setError(\"Game wasn't finished.\");\n        console.error(\"Game wasn't finished.\");\n        return;\n      }\n      const didWin = gameResult.won;\n      const playerChoice = gameResult.playerChoice ? 'LOGO' : 'DYM';\n      const flipResult = didWin ? playerChoice : (playerChoice === 'DYM' ? 'LOGO' : 'DYM');\n\n      console.log(\"playerChoice: \" + playerChoice + \", flipResult: \" + flipResult);\n\n      setResult(flipResult);\n      setIsFlipping(false);\n      setGameStatus('completed');\n      if (didWin) {\n        setWinStatus('win');\n      } else {\n        setWinStatus('lose');\n      }\n\n    } catch (err) {\n      console.error('Error completing game:', err);\n      setIsFlipping(false);\n      setError('Error completing the game');\n      setGameStatus(null);\n    }\n\n    await refreshEverything()\n  };\n\n  return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 relative\">\n        {/* Container for coin flip and house info */}\n        <div className=\"relative flex items-center justify-center space-x-8 w-full max-w-screen-lg\">\n\n          {/* Main Game Panel */}\n          <div className=\"p-8 bg-white rounded-lg shadow-xl w-full max-w-md relative z-10\">\n            <h1 className=\"text-3xl font-bold text-center mb-6\">Coin Flip Game</h1>\n\n            {error && <div className=\"text-red-500 text-center mb-4\">{error}</div>}\n\n            <div className=\"p-4 mb-4 bg-gray-100 rounded-lg shadow-md text-center\">\n              <h3 className=\"text-lg font-semibold\">Game Status:</h3>\n              <div\n                  className={`text-xl font-bold mt-2 ${gameStatus === 'pending' ? 'text-yellow-500' : gameStatus === 'completed' ? 'text-green-500' : 'text-gray-500'}`}>\n                {gameStatus === 'pending' ? 'Pending...' : gameStatus === 'completed' ? 'Completed' : 'No Game Started'}\n              </div>\n              {gameStatus === 'completed' && (\n                  <div className={`text-xl font-bold mt-2 ${winStatus === 'win' ? 'text-green-500' : 'text-red-500'}`}>\n                    {winStatus === 'win' ? 'You won!' : 'You lost!'}\n                  </div>\n              )}\n            </div>\n\n            <div className=\"mb-6 text-center relative\">\n              {/* Coin Flip Animation */}\n              <motion.div\n                  className=\"w-32 h-32 rounded-full mx-auto flex items-center justify-center relative\"\n                  animate={{\n                    rotateY: isFlipping ? 3600 : 0,\n                    scale: isFlipping ? 1.2 : 1,\n                  }}\n                  transition={{\n                    duration: isFlipping ? 2 : 0,\n                    repeat: isFlipping ? Infinity : 0,\n                    ease: 'easeInOut',\n                  }}\n              >\n                <img\n                    src=\"/coin.png\"  // Ensure the path is correct to where your image is stored\n                    alt=\"Coin\"\n                    className=\"w-full h-full object-contain\"\n                />\n                {result && (\n                    <div className=\"absolute inset-0 flex items-center justify-center text-2xl font-bold text-white\">\n                      {result === 'DYM' ? 'DYM' : 'LOGO'}\n                    </div>\n                )}\n              </motion.div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <TextField\n                    label=\"Your Bet (eth)\"\n                    type=\"number\"\n                    value={bet}\n                    onChange={(e) => setBet(Math.max(1, parseInt(e.target.value)))}\n                    fullWidth\n                    inputProps={{min: 1, max: balance}}\n                />\n              </div>\n\n              <RadioGroup value={side} onChange={(e) => setSide(e.target.value)}>\n                <FormControlLabel value=\"DYM\" control={<Radio/>} label=\"DYM\"/>\n                <FormControlLabel value=\"LOGO\" control={<Radio/>} label=\"LOGO\"/>\n              </RadioGroup>\n\n              <Button\n                  variant=\"contained\"\n                  onClick={flipCoin}\n                  disabled={isFlipping || gameStatus === 'pending'}\n                  fullWidth\n              >\n                Flip\n              </Button>\n\n              <Button\n                  variant=\"contained\"\n                  onClick={() => completeGame(false)}\n                  disabled={isFlipping || gameStatus !== 'pending'}\n                  fullWidth\n              >\n                Reveal\n              </Button>\n\n              <div className=\"text-center text-xl font-semibold\">Balance: {balance} eth</div>\n            </div>\n          </div>\n\n          {/* House Information Panel */}\n          <div\n              className=\"absolute top-1/2 right-0 transform -translate-y-1/2 p-4 bg-white rounded-lg shadow-xl w-auto max-w-xs z-20\">\n            <h3 className=\"text-lg font-semibold text-center mb-4\">House Information</h3>\n            <div className=\"text-xl font-bold text-center whitespace-nowrap\">\n              House Balance: {houseBalance} ETH\n            </div>\n            {/* Withdraw Button */}\n            <div className=\"mt-4 text-center\">\n              <Button\n                  variant=\"contained\"\n                  onClick={withdraw}\n                  fullWidth\n                  disabled={!houseBalance || houseBalance === '0'}\n              >\n                Withdraw\n              </Button>\n            </div>\n          </div>\n\n        </div>\n\n        {/* Strictly Centered Coin Flip (absolute positioning) */}\n        <div className=\"absolute inset-0 flex items-center justify-center z-0\">\n          <motion.div\n              className=\"w-32 h-32 rounded-full mx-auto flex items-center justify-center\"\n              animate={{\n                rotateY: isFlipping ? 3600 : 0,\n                scale: isFlipping ? 1.2 : 1,\n              }}\n              transition={{\n                duration: isFlipping ? 2 : 0,\n                repeat: isFlipping ? Infinity : 0,\n                ease: 'easeInOut',\n              }}\n          >\n            <img\n                src=\"/coin.png\"  // Ensure the path is correct to where your image is stored\n                alt=\"Coin\"\n                className=\"w-full h-full object-contain\"\n            />\n          </motion.div>\n        </div>\n      </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}