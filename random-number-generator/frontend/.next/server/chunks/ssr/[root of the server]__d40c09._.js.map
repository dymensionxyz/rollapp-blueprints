{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/pudge1000-7/GolandProjects/rollapp-evm/contracts/frontend/coin-flip-game/app/page.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, TextField, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport { toast } from 'react-hot-toast';\nimport { ethers } from 'ethers';\nimport CoinFlipABI from './CoinFlipABI.json';\n\nfunction sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default function CoinFlipGame() {\n  const [bet, setBet] = useState(1);\n  const [side, setSide] = useState('DYM');\n  const [balance, setBalance] = useState(100);\n  const [isFlipping, setIsFlipping] = useState(false);\n  const [result, setResult] = useState<'DYM' | 'LOGO' | null>(null);\n  const [error, setError] = useState('');\n  const [provider, setProvider] = useState<any>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [coinFlipContract, setCoinFlipContract] = useState<any>(null);\n  const [connected, setConnected] = useState(false);\n  const [gameStatus, setGameStatus] = useState<'pending' | 'completed' | null>(null);\n  const [winStatus, setWinStatus] = useState<'win' | 'lose' | null>(null)\n\n  const CONTRACT_ADDRESS = '0x3880802ed8c3148bf70eBA063c73FFC8D4555021';\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const initWeb3 = async () => {\n        const ethereum = window.ethereum;\n        if (typeof ethereum !== 'undefined') {\n          try {\n            const web3Provider = new ethers.BrowserProvider(ethereum);\n            const network = await web3Provider.getNetwork();\n            console.log('Connected to network:', network.name, 'with chainId', network.chainId);\n            const userSigner = await web3Provider.getSigner();\n            const contract = new ethers.Contract(CONTRACT_ADDRESS, CoinFlipABI, userSigner);\n\n            setProvider(web3Provider);\n            setSigner(userSigner);\n            setCoinFlipContract(contract);\n            setConnected(true);\n            await fetchGameStatus(contract);\n          } catch (err) {\n            console.error('Failed to connect to MetaMask', err);\n            setError('Failed to connect to MetaMask');\n          }\n        } else {\n          setError('Please install MetaMask');\n        }\n      };\n      initWeb3();\n    } else {\n      setError('Please install MetaMask');\n    }\n  }, []);\n\n  const fetchGameStatus = async (contract: any) => {\n    try {\n      const gameResult = await contract.getPlayerLastGameResult();\n      console.log(gameResult);\n\n      const status = gameResult.status.toString();\n      let statusMessage = '';\n\n      if (status === '2') {\n        statusMessage = 'Completed';\n        const didWin = gameResult.won;\n        const playerChoice = gameResult.playerChoice ? 'LOGO' : 'DYM';\n        const flipResult = didWin ? playerChoice : (playerChoice === 'DYM' ? 'LOGO' : 'DYM');\n        console.log(\"playerChoice: \" + playerChoice + \", flipResult: \" + flipResult);\n\n        if (didWin) {\n          setWinStatus('win');\n        } else {\n          setWinStatus('lose');\n        }\n\n        setResult(flipResult);\n        setIsFlipping(false);\n        setGameStatus('completed');\n      } else if (status === '1') {\n        statusMessage = 'Pending';\n      } else {\n        statusMessage = 'No Game Started';\n      }\n\n      console.log('Fetched game status:', statusMessage);\n\n      setGameStatus(status === '2' ? 'completed' : status === '1' ? 'pending' : null);\n    } catch (err) {\n      console.error('Error fetching game status:', err);\n      setError('Error fetching game status');\n    }\n  };\n\n  const flipCoin = async () => {\n    console.log(\"flipping the coin with user choice: \" + side);\n\n    if (!connected) {\n      setError('Please connect to MetaMask');\n      return;\n    }\n\n    if (bet > balance) {\n      setError('Insufficient balance for this bet');\n      return;\n    }\n\n    setError('');\n    setIsFlipping(true);\n    setResult(null);\n    setGameStatus('pending');\n\n    try {\n      const currentNonce = await provider.getTransactionCount(signer.address, \"latest\");\n      const sideEnum = side === 'DYM' ? 0 : 1;\n      const tx = await coinFlipContract.startGame(sideEnum, {\n        nonce: currentNonce\n      });\n      await tx.wait();\n      console.log('Game started');\n      await completeGame(true);\n    } catch (err) {\n      console.error('Error flipping the coin:', err);\n      setIsFlipping(false);\n      setError('Error interacting with the contract');\n      setGameStatus(null);\n    }\n  };\n\n  const completeGame = async (wait: boolean) => {\n    console.log(`completing the game`);\n    try {\n      var retry = 0;\n      while (retry < 3) {\n        if (wait) {\n          await sleep(5000);\n        }\n        try {\n          const currentNonce = await provider.getTransactionCount(signer.address, \"latest\");\n          const tx = await coinFlipContract.completeGame({\n            nonce: currentNonce\n          });\n          await tx.wait();\n          break;\n        } catch (err) {\n          retry++;\n          setError(`Error completing the game, retry #${retry}.`);\n          console.error(`Retry reason: ${err}`);\n        }\n      }\n\n      if (retry >= 3) {\n        return;\n      }\n\n      const gameResult = await coinFlipContract.getPlayerLastGameResult();\n      console.log(gameResult);\n\n      if (gameResult.status != 2) {\n        setError(\"Game wasn't finished.\");\n        console.error(\"Game wasn't finished.\");\n        return;\n      }\n      const didWin = gameResult.won;\n      const playerChoice = gameResult.playerChoice ? 'LOGO' : 'DYM';\n      const flipResult = didWin ? playerChoice : (playerChoice === 'DYM' ? 'LOGO' : 'DYM');\n\n      console.log(\"playerChoice: \" + playerChoice + \", flipResult: \" + flipResult);\n\n      setResult(flipResult);\n      setIsFlipping(false);\n      setGameStatus('completed');\n      if (didWin) {\n        setWinStatus('win');\n      } else {\n        setWinStatus('lose');\n      }\n\n      if (didWin) {\n        setBalance(balance + bet);\n        toast.success(`You won $${bet}. Your new balance is $${balance + bet}.`);\n      } else {\n        setBalance(balance - bet);\n        toast.error(`You lost $${bet}. Your new balance is $${balance - bet}.`);\n      }\n    } catch (err) {\n      console.error('Error completing game:', err);\n      setIsFlipping(false);\n      setError('Error completing the game');\n      setGameStatus(null);\n    }\n  };\n\n  return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\">\n        <div className=\"p-8 bg-white rounded-lg shadow-xl w-full max-w-md\">\n          <h1 className=\"text-3xl font-bold text-center mb-6\">Coin Flip Game</h1>\n\n          {error && <div className=\"text-red-500 text-center mb-4\">{error}</div>}\n\n          <div className=\"p-4 mb-4 bg-gray-100 rounded-lg shadow-md text-center\">\n            <h3 className=\"text-lg font-semibold\">Game Status:</h3>\n            <div className={`text-xl font-bold mt-2 ${gameStatus === 'pending' ? 'text-yellow-500' : gameStatus === 'completed' ? 'text-green-500' : 'text-gray-500'}`}>\n              {gameStatus === 'pending' ? 'Pending...' : gameStatus === 'completed' ? 'Completed' : 'No Game Started'}\n            </div>\n            {gameStatus === 'completed' && (\n                <div className={`text-xl font-bold mt-2 ${winStatus === 'win' ? 'text-green-500' : 'text-red-500'}`}>\n                  {winStatus === 'win' ? 'You won!' : 'You lost!'}\n                </div>\n            )}\n          </div>\n\n          <div className=\"mb-6 text-center relative\">\n            <motion.div\n                className=\"w-32 h-32 rounded-full mx-auto flex items-center justify-center relative\"\n                animate={{\n                  rotateY: isFlipping ? 3600 : 0,\n                  scale: isFlipping ? 1.2 : 1,\n                }}\n                transition={{\n                  duration: isFlipping ? 2 : 0,\n                  repeat: isFlipping ? Infinity : 0,\n                  ease: 'easeInOut',\n                }}\n            >\n              {/* Use an image of the coin */}\n              <img\n                  src=\"/coin.png\"  // Ensure the path is correct to where your image is stored\n                  alt=\"Coin\"\n                  className=\"w-full h-full object-contain\"\n              />\n              {/* Text overlay */}\n              {result && (\n                  <div className=\"absolute inset-0 flex items-center justify-center text-2xl font-bold text-white\">\n                    {result === 'DYM' ? 'DYM' : 'LOGO'}\n                  </div>\n              )}\n            </motion.div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <TextField\n                  label=\"Your Bet ($)\"\n                  type=\"number\"\n                  value={bet}\n                  onChange={(e) => setBet(Math.max(1, parseInt(e.target.value)))}\n                  fullWidth\n                  inputProps={{ min: 1, max: balance }}\n              />\n            </div>\n\n            <RadioGroup value={side} onChange={(e) => setSide(e.target.value)}>\n              <FormControlLabel value=\"DYM\" control={<Radio />} label=\"DYM\" />\n              <FormControlLabel value=\"LOGO\" control={<Radio />} label=\"LOGO\" />\n            </RadioGroup>\n\n            <Button\n                variant=\"contained\"\n                onClick={flipCoin}\n                disabled={isFlipping || gameStatus === 'pending'}\n                fullWidth\n            >\n              Flip\n            </Button>\n\n            <Button\n                variant=\"contained\"\n                onClick={() => completeGame(false)}\n                disabled={isFlipping || gameStatus !== 'pending'}\n                fullWidth\n            >\n              Reveal\n            </Button>\n\n            <div className=\"text-center text-xl font-semibold\">Balance: ${balance}</div>\n          </div>\n        </div>\n      </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}